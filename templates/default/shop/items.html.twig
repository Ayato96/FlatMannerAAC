{% extends 'base.html.twig' %}

{% block title %}Shop Items{% endblock %}

{% block content %}
<style>
    .example-wrapper { margin: 1em auto; width: 95%; font: 18px/1.5 sans-serif; }
    
    tr:nth-child(even) {
        background: #dddddd;
    }
    th:nth-child(1) {
        width: 10%;
        text-align: center;
    }
    th:nth-child(2) {
        width: 80%;
    }
    th:nth-child(3) {
        width: 10%;
        text-align: center;
    }
    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }
    table {
        width: 100%;
    }
    .shopping-cart {
        position: fixed;
        bottom: 5px;
        height: 40px;
        left: 10px;
        width: 40px;
        background: whitesmoke;
    }
</style>

<div class="example-wrapper">
    <table>
        <tr>
            <th>Picture</th>
            <th>Description</th>
            <th>Price</th>
        </tr>
        {% for item in items %}
            <tr>
                <td style="text-align: center;"><img src="/img/items/{{ item.id }}.png" alt="{{ item.id }}"></td>
                <td>
                    <p style="margin: 0 0 2px 0; font-weight:700;">{{ item.name }}</p>
                    <p style="margin: 0;">{{ item.desc }}</p>
                </td>
                <td style="text-align: center;">{{ item.price }}</td>
            </tr>
        {% endfor %}
    </table>
</div>
<!-- <div style="height: 40px; width: 40px; background: yellow; position: fixed; bottom: 0px; left:0px;"><i class="fas fa-shopping-cart" style="width: 100%; height: 100%;"></i></div> -->
<div class="shopping-cart"><i class="fas fa-shopping-cart"></i>
    <div class="items">
        <div class="item"></div>
        <div class="item"></div>
        <div class="item"></div>
        <div class="item"></div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>

    {# function setCookie(cname, cvalue, exh) {
        var d = new Date();
        d.setTime(d.getTime() + (exh * 60 * 60 * 1000));
        var expires = "expires="+d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    
    function getCookie(cname) {
        var name = cname + "=";
        var ca = document.cookie.split(';');
        for(var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    } #}

    class Item
    {
        constructor(id, amount)
        {
            this.id = id
            this.amount = amount
        }
    }

    class Basket
    {
        constructor(options = {
            max: 15
        })
        {
            if ( Cookies.get('basket') !== undefined )
            {
                var saved = JSON.parse(Cookies.get('basket'))
                this.container = saved.container
                this.options = saved.options
            }

            else
            {
                this.options = options
                this.container = {};
            }
        }

        add(item)
        {
            if ( Object.keys(this.container).length >= this.options.max )
                return false
            this.container[item.id] = item
            this.save()
            return true
        }

        remove(id)
        {
            delete this.container[id]
            this.save()
        }

        save()
        {
            Cookies.set('basket', JSON.stringify(this))
        }
    }

    basket = new Basket({max: 3})
    basket.add(new Item(2160,100))
    basket.add(new Item(1245,100))
    basket.add(new Item(6899,100))
    basket.add(new Item(7415,100))
    basket.add(new Item(3345,100))

    {# setCookie("basket",'{"basket": [{"itemid": 1255},{"itemid": 7574},{"itemid": 3842},{"itemid": 1125}]}',2)
    console.log(JSON.parse(getCookie('basket')))

    function sendPOSTXHR(path){
        var xhr = new XMLHttpRequest();
        xhr.open("POST", path, true);

        //Send the proper header information along with the request
        xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

        xhr.onreadystatechange = function() {//Call a function when the state changes.
            if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
                function a(a, b){
                    alert(a)
                    alert(b)
                }
                a(xhr.responseText, 'string')
            }
        }
        xhr.send("foo=bar&lorem=ipsum"); 
    }
    sendPOSTXHR("/account/login") #}
        
    
</script>

{% endblock %}
